import org.w3c.dom.Document
import org.w3c.dom.Element

plugins {
    id 'java-gradle-plugin'
    id 'com.gradle.plugin-publish' version "0.20.0"
    id 'maven-publish'
}

repositories {
    maven { url = "https://repo.spongepowered.org/maven/" }
    maven { url = "https://maven.fabricmc.net/"}
    maven { url = "https://maven.architectury.dev/" }
    mavenCentral()
    gradlePluginPortal()
}

group = 'team.cagayakegirls.cake'
def baseVersion = "1.6"

def ENV = System.getenv()
def runNumber = ENV.GITHUB_RUN_NUMBER ?: "9999"

def isSnapshot = ENV.PR_NUM != null

if (!isSnapshot) {
    version = baseVersion + "." + runNumber
} else {
    version = baseVersion + "-PR." + ENV.PR_NUM + "." + runNumber
}

gradlePlugin {
    // Define the plugin
    plugins {
        cake {
            id = 'team.cagayakegirls.cake'
            implementationClass = 'team.cagayakegirls.cake.CakeGradlePlugin'
        }
    }
}
javadoc.options.addStringOption('Xdoclint:none', '-quiet')

dependencies {
    compileOnly "commons-io:commons-io:2.15.1"
    compileOnly "com.google.code.gson:gson:2.10.1"
    compileOnly "net.fabricmc:sponge-mixin:0.16.3+mixin.0.8.7"
    compileOnly "dev.architectury:architectury-loom:1.10-SNAPSHOT"
    compileOnly "net.fabricmc:mapping-io:0.7.1"

    // Forge mods.toml parsing
    compileOnly "com.electronwill.night-config:toml:3.6.6"
    compileOnly "org.jetbrains:annotations:25.0.0"
}

task apiJar(type: Jar) {
    archiveBaseName.set("api.jar")

    from sourceSets.main.output
    from sourceSets.main.java.getSrcDirs()
    include "team/cagayakegirls/cake/api/**"
}

jar.dependsOn(apiJar)

jar {
    into("META-INF/jars") {
        from apiJar
    }
}

pluginBundle {
    website = 'https://github.com/CagayakeGirls/Cake'
    vcsUrl = 'https://github.com/CagayakeGirls/Cake'

    description = 'Additions and automations for architectury-loom'

    plugins {
        cake {
            displayName = "Cake"
            tags = ['architectury-loom', 'neoforge', 'fabric', 'fabricmc', 'annotation processor']
        }
    }
}

publishing {
    publications {
        if (!isSnapshot && !ENV.EXPERIMENTAL) {
            // Also publish a snapshot so people can use the latest version if they wish
            snapshot(MavenPublication) { publication ->
                groupId = project.group
                artifactId = project.base.archivesName.get()
                version = baseVersion + '-SNAPSHOT'

                from components.java
            }

            // Manually crate the plugin marker for snapshot versions
            snapshotPlugin(MavenPublication) {
                groupId = 'band.kessoku.koom'
                artifactId = 'band.kessoku.koom.gradle.plugin'
                version = baseVersion + '-SNAPSHOT'

                pom.withXml({
                    // Based off org.gradle.plugin.devel.plugins.MavenPluginPublishPlugin
                    Element root = asElement()
                    Document document = root.getOwnerDocument()
                    Node dependencies = root.appendChild(document.createElement('dependencies'))
                    Node dependency = dependencies.appendChild(document.createElement('dependency'))
                    Node groupId = dependency.appendChild(document.createElement('groupId'))
                    groupId.setTextContent(project.group)
                    Node artifactId = dependency.appendChild(document.createElement('artifactId'))
                    artifactId.setTextContent(project.archivesBaseName)
                    Node version = dependency.appendChild(document.createElement('version'))
                    version.setTextContent(baseVersion + '-SNAPSHOT')
                })
            }
        }
    }

    repositories {
        maven {
            name = "KTTMaven"
            url = "https://maven.kessokuteatime.work/releases"

            credentials {
                username = System.getenv("KTT_MAVEN_USERNAME")
                password = System.getenv("KTT_MAVEN_TOKEN")
            }
        }
    }
}